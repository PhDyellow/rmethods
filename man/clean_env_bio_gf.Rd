% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_clean.R
\name{clean_env_bio_gf}
\alias{clean_env_bio_gf}
\title{Filter dataset for use in Gradient Forest}
\usage{
clean_env_bio_gf(env_data, bio_data, coord_cols_bio,
  coord_cols_env = NULL, env_range = 3, env_accept_outliers = NULL,
  bio_range = 3, bio_accept_outliers = NULL, min_sp_samples = 5)
}
\arguments{
\item{env_data}{A Raster* object OR a data.frame containing environmental variables. Format should be site by environmental variables}

\item{bio_data}{A data.frame of site by species observations of biological data}

\item{coord_cols_bio}{A character vector of column names in bio_data that define longitude and latitude. When env_data is a raster, longitude must come first.}

\item{coord_cols_env}{A character vector of column names in env_data that define sites spatially. If env_data is a Raster* object, this parameter is ignored. If coord_cols_env = c(""), then the sites in env_data are assumed to line up with the sites in bio_data}

\item{env_range}{Number of standard deviations from the mean before a value is considered an outlier.}

\item{env_accept_outliers}{Environmental columns to accept all outliers}

\item{bio_range}{Number of standard deviations from the mean before a value is considered an outlier.}

\item{bio_accept_outliers}{Biological sample columns to accept all outliers}

\item{min_sp_samples}{Minimum number of non-zero observations needed for species to be accepted}
}
\value{
A list containing: \describe{
  \item{\code{data}}{A site by species and environment data.frame}
  \item{\code{sp_names}}{Names of species columns in \code{data}}
  \item{\code{env_names}}{Names of environmental columns in \code{data}}
  \item{\code{coord_names}}{Names of coordinate columns in \code{data}}
  }
}
\description{
Shapes and filters environmental and biological data
into a format suitalbe for passing into a gradient forest
fitting method
}
\details{
If the env_data is in a data.frame format, then the coord_cols (or rows, if `coord_cols_env = c("")`)must match exactly between bio_data and env_data. Raster* objects assign bio_data rows to the nearest grid cell centre in env_data.
}
